$colors: (
    dark: #0d0529,
    light: #fff,
    primary: #ff00e1,
    secondary: #2bd1e3,
    tertiary: #f1e6b7,
);

@function values($color) {
    @return #{red(map-get($colors,$color))},
    #{green(map-get($colors,$color))},
    #{blue(map-get($colors,$color))}
}

@function darkOrLight($color){
    @return if(lightness($color) > 50, 'dark', 'light');
}

:root {

    @each $color, $value in $colors {
        --#{$color}: #{$value};
        --#{$color}-rgb: #{values($color)};
        --#{$color}-r: #{red($value)};
        --#{$color}-g: #{green($value)};
        --#{$color}-b: #{blue($value)};
        --#{$color}-h: #{hue($value)};
        --#{$color}-s: #{saturation($value)};
        --#{$color}-l: #{lightness($value)};
        --#{$color}-text: var(--#{darkOrLight($value)});
    }

    --background: var(--dark);
    --background-rgb: var(--dark-rgb);
    --foreground: var(--light);
    --foreground-rgb: var(--light-rgb);

    --space: 1em;
    --border-radius: 1.5em;
    --spacing: clamp(2em, 8vw, 6em);
}
.gradient{
    --color1: #f25d5d;
    --color2: #ffe058;
    --color3: #00ffaa;
}

body,
html {
    font-family:Inter,'Roboto', sans-serif;
    font-size: 16px;
    line-height: 1.6;
    color: var(--foreground);
    background-color: var(--background);

}

/* ADD RESET */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

ul,li{
    margin: 0; padding: 0; 
    list-style-type: none;
}